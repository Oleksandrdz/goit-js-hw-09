{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASG,iBAAiB,UA6BpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IApCPR,EAAKC,KAAKe,iBAAiB,UAG3B,SAAuBC,GACrBA,EAAIC,iBAEJ,IAAIC,EAAQ,GACZnB,EAAKI,OAAOgB,SAAQ,SAAAC,GAClBF,EAAME,EAAQC,MAAQC,OAAOF,EAAQG,MAAMC,O,IAI7C,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAMQ,OAAQD,GAAK,EAAE,CACxC,IAAIE,EAAcT,EAAMX,OAASW,EAAMU,KACzCvB,EAAca,EAAMX,MAAOoB,GAC1BE,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAEvE4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAAlC,GAASmC,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputs: document.querySelectorAll('input'),\n};\n\nrefs.form.addEventListener(\"submit\", onClickCreate);\n\n\nfunction onClickCreate(evt) {\n  evt.preventDefault();\n\n  let input = {};\n  refs.inputs.forEach(element => {\n    input[element.name] = Number(element.value.trim());\n  });\n\n\n  for (let i = 1; i <= input.amount; i += 1){\n    let currentStep = input.delay += input.step;\n  createPromise(input.delay, currentStep)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);   \n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);   \n  });\n  }\n  // evt.target.reset();\n }\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay)\n  })   \n}\n "],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputs","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","input","forEach","element","name","Number","value","trim","i","amount","currentStep","step","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.7cceecc7.js.map"}